{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["TextInput","phText","labelPos","value","setValue","label","minLength","maxLength","useState","useEffect","setID","Math","htmlFor","id","type","placeholder","onChange","e","Container","styled","FDRow","FDCol","Input","Label","App","num","setNum","ReactDOM","render","document","getElementById"],"mappings":"+hCASaA,EAAY,SAAC,GAAkH,QAAjHC,cAAiH,MAAlH,GAAkH,MAAvGC,gBAAuG,MAAlH,OAAkH,MAAtFC,aAAsF,MAAlH,GAAkH,MAA5EC,gBAA4E,MAAjE,kBAAjD,MAAkH,MAArDC,aAAqD,MAAlH,QAAkH,MAAtCC,iBAAsC,MAAlH,IAAkH,MAAvBC,iBAAuB,MAAb,OAAa,IACpHC,mBAApB,IADwI,mBAClI,EADkI,KAClI,EADkI,KAOxI,OAJAC,qBAAU,WACNC,EAAM,GAAD,OAAIC,WAAW,IAACA,cAArBD,OADJD,IAKI,yBACK,WACG,yBACI,qBAAOG,QAASC,GADpB,GAEI,qBACIA,GADJ,EAEIC,KAFJ,OAGIC,YAHJ,EAIIZ,MAJJ,EAKIa,SAAaC,YAAD,OAAOb,EAASa,SALhC,QAMIX,UANJ,EAOIC,UAAWA,KAGnB,UACA,yBACI,qBAAOK,QAASC,GADpB,GAEI,qBACIA,GADJ,EAEIC,KAFJ,OAGIC,YAHJ,EAIIZ,MAJJ,EAKIa,SAAaC,YAAD,OAAOb,EAASa,SALhC,QAMIX,UANJ,EAOIC,UAAWA,KAInB,qBACIM,GADJ,EAEIC,KAFJ,OAGIC,YAHJ,EAIIZ,MAJJ,EAKIa,SAAaC,YAAD,OAAOb,EAASa,SALhC,QAMIX,UANJ,EAOIC,UAAWA,MA+DzBW,EAAYC,IAAH,gBAMTC,EAAQD,IAAH,gBAKLE,EAAQF,IAAH,gBAKLG,EAAQH,IAAH,kBAcLI,EAAQJ,IAAH,kBCvIIK,G,MALH,WAAO,IAAD,EACKhB,mBAAS,IADd,mBACTiB,EADS,KACLC,EADK,KAEhB,OAAO,kBAAC,EAAD,CAAWvB,MAAOsB,EAAKrB,SAAUsB,EAAQrB,MAAM,SAASH,SAAS,UCD1EyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.80e7010d.chunk.js","sourcesContent":["import styles from './styles.module.css'\nimport React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\n\nexport const TextInput = ({phText='',labelPos='none', value='', setValue = () => null, label='label', minLength='0', maxLength='1000' }) => {\n    const [id, setID] = useState('')\n\n    useEffect(() => {\n        setID(`${Math.floor((Math.random() * 10000) + 1)}`)\n    },[])\n    \n    return (\n        <Container>\n            {labelPos === 'left' ? (\n                <FDRow>\n                    <Label htmlFor={id}>{label}</Label>\n                    <Input \n                        id={id}\n                        type = 'text'\n                        placeholder = {phText}\n                        value = {value}\n                        onChange = {(e) => setValue(e.target.value)}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                    />  \n                </FDRow>\n            ) : labelPos === 'top' ? (\n                <FDCol>\n                    <Label htmlFor={id}>{label}</Label>\n                    <Input \n                        id={id}\n                        type = 'text'\n                        placeholder = {phText}\n                        value = {value}\n                        onChange = {(e) => setValue(e.target.value)}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                    />   \n                </FDCol>\n            ) :  \n                <Input \n                    id={id}\n                    type = 'text'\n                    placeholder = {phText}\n                    value = {value}\n                    onChange = {(e) => setValue(e.target.value)}\n                    minLength={minLength}\n                    maxLength={maxLength}\n                />}\n        </Container>        \n    )\n}\n\n\n//number input\n\nexport const NumberInput = ({phText='',labelPos='none', value='', setValue = () => null, label='label', minLength='0', maxLength='1000' }) => {\n  const [id, setID] = useState('')\n\n  useEffect(() => {\n      setID(`${Math.floor((Math.random() * 10000) + 1)}`)\n  },[])\n  \n  return (\n      <Container>\n          {labelPos === 'left' ? (\n              <FDRow>\n                  <Label htmlFor={id}>{label}</Label>\n                  <Input \n                      id={id}\n                      type = 'number'\n                      placeholder = {phText}\n                      value = {value}\n                      onChange = {(e) => setValue(e.target.value)}\n                      minLength={minLength}\n                      maxLength={maxLength}\n                      pattern='\\d*'\n                  />  \n              </FDRow>\n          ) : labelPos === 'top' ? (\n              <FDCol>\n                  <Label htmlFor={id}>{label}</Label>\n                  <Input \n                      id={id}\n                      type = 'number'\n                      placeholder = {phText}\n                      value = {value}\n                      onChange = {(e) => setValue(e.target.value)}\n                      minLength={minLength}\n                      maxLength={maxLength}\n                      pattern='\\d*'\n                  />   \n              </FDCol>\n          ) :  \n              <Input \n                  id={id}\n                  type = 'number'\n                  placeholder = {phText}\n                  value = {value}\n                  onChange = {(e) => setValue(e.target.value)}\n                  minLength={minLength}\n                  maxLength={maxLength}\n                  pattern='\\d*'\n              />}\n      </Container>        \n  )\n}\n\n\n\nconst Container = styled.div`\n    width: 95%;    \n    padding: 0px;\n    margin: 5px auto;\n`\n\nconst FDRow = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst FDCol = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst Input = styled.input`\n    font-size: 18px;\n    width: 100%;\n    padding: 5px;\n    margin: 0px;\n    border: #ddd 1px solid;\n    background-color: white;\n\n    :focus {\n        outline: none;\n    }\n\n`\n\nconst Label = styled.label`\n    font-size: 18px;\n    margin-right: 5px;\n`\n","import React, {useState} from 'react'\n\nimport { NumberInput, TextInput } from 'simple-reactjs-inputs'\nimport 'simple-reactjs-inputs/dist/index.css'\n\nconst App = () => {\n  const [num,setNum] = useState('')\n  return <TextInput value={num} setValue={setNum} label='Number' labelPos='top'/>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}